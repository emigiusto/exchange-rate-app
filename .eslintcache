[{"C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\index.js":"1","C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\App.js":"2","C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\components\\CurrencyRow.js":"3","C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\components\\SelectBox.js":"4","C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\converters\\CurrencyConverter.js":"5","C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\converters\\helpers\\worldCurrencyConverter.js":"6","C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\converters\\helpers\\cryptoCurrencyConverter.js":"7","C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\service\\exchangeService.js":"8","C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\service\\availableSymbolsService.js":"9"},{"size":207,"mtime":1608116214642,"results":"10","hashOfConfig":"11"},{"size":3187,"mtime":1608916985949,"results":"12","hashOfConfig":"11"},{"size":1064,"mtime":1608917023229,"results":"13","hashOfConfig":"11"},{"size":555,"mtime":1608655800706,"results":"14","hashOfConfig":"11"},{"size":464,"mtime":1608661427411,"results":"15","hashOfConfig":"11"},{"size":681,"mtime":1608917226363,"results":"16","hashOfConfig":"11"},{"size":2036,"mtime":1608916900617,"results":"17","hashOfConfig":"11"},{"size":2235,"mtime":1608917107188,"results":"18","hashOfConfig":"11"},{"size":1699,"mtime":1608751708822,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1j7fdye",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\index.js",[],["42","43"],"C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\App.js",["44","45"],"import React, {useEffect, useState} from 'react';\r\nimport './App.css'\r\nimport CurrencyRow from './components/CurrencyRow'\r\n\r\nimport {updateMarketInfo,exchangeRateFromArray} from './service/exchangeService'\r\nimport {allAvailableCurrencies} from './service/availableSymbolsService'\r\n\r\nfunction App() {\r\n\r\n  const [currencyOptions, setCurrencyOptions] = useState([])\r\n  const [fromCurrency, setFromCurrency] = useState({name: 'EUR', market: 'world'})\r\n  const [toCurrency, setToCurrency] = useState({name: 'DKK', market: 'world'})\r\n  const [exchangeRate, setExchangeRate] = useState()\r\n  const [amount, setAmount] = useState(1)\r\n  const [amountiInFromCurrency, setAmountiInFromCurrency] = useState(true)\r\n  const [pairRates, setPairRates] = useState([])\r\n\r\n  let toAmount, fromAmount;\r\n  //Decides which input we should update (the opposite from the user' changes)\r\n  if (amountiInFromCurrency) {\r\n    fromAmount = amount\r\n    toAmount = amount * exchangeRate\r\n  } else {\r\n    toAmount = amount\r\n    fromAmount = amount / exchangeRate\r\n  }\r\n\r\n  //Runs when mounting the App getting loading available currency and first exchange rate\r\n  useEffect(()=>{\r\n    //Loads all available Currencies\r\n    allAvailableCurrencies().then(allCurrencies => {\r\n      setCurrencyOptions(allCurrencies)\r\n      //Sets default FromCurrency, ToCurrency\r\n      //setFromCurrency(allCurrencies[0])\r\n      //setToCurrency(allCurrencies[1])\r\n\r\n      //\r\n        updateMarketInfo(fromCurrency,toCurrency, allCurrencies).then((response) => {\r\n          setExchangeRate(response.exchangeRate)\r\n          setPairRates(response.pairs)\r\n        })\r\n\r\n    })\r\n  },[])\r\n\r\n  //Runs everytime the user changes the currency selection\r\n  useEffect(()=>{\r\n    var exchangeRateCached = exchangeRateFromArray(fromCurrency,toCurrency, pairRates)\r\n      if (!exchangeRateCached) {\r\n        updateMarketInfo(fromCurrency,toCurrency).then((response) => {\r\n          setExchangeRate(response.exchangeRate)\r\n          setPairRates(response.pairs)\r\n        })\r\n      } else {\r\n        setExchangeRate(exchangeRateCached)\r\n      }\r\n  },[fromCurrency,toCurrency])\r\n      \r\n\r\n  function handleFromAmountChange(e) {\r\n    setAmount(e.target.value)\r\n    setAmountiInFromCurrency(true)\r\n  }\r\n\r\n  function handleToAmountChange(e) {\r\n    setAmount(e.target.value)\r\n    setAmountiInFromCurrency(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"convert-title\">Convert</h1>\r\n      <CurrencyRow className=\"currency-row\"\r\n          currencyOptions={currencyOptions}\r\n          selectedCurrency={fromCurrency} \r\n          onChangeCurrency={e => {\r\n              setFromCurrency(JSON.parse(e.target.value))\r\n            }\r\n          }\r\n          amount={fromAmount}\r\n          onChangeAmount= {handleFromAmountChange}>\r\n      </CurrencyRow>\r\n      <h2 className=\"equals\">=</h2>\r\n      <CurrencyRow className=\"currency-row\"\r\n            currencyOptions={currencyOptions}\r\n            selectedCurrency={toCurrency}\r\n            onChangeCurrency={e => setToCurrency(JSON.parse(e.target.value))}\r\n            amount={toAmount}\r\n            onChangeAmount= {handleToAmountChange}>\r\n      </CurrencyRow>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\components\\CurrencyRow.js",[],"C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\components\\SelectBox.js",[],["46","47"],"C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\converters\\CurrencyConverter.js",[],["48","49"],"C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\converters\\helpers\\worldCurrencyConverter.js",[],"C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\converters\\helpers\\cryptoCurrencyConverter.js",[],"C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\service\\exchangeService.js",[],"C:\\Users\\emigi\\OneDrive\\Documentos\\GitHub\\opeepl-test\\src\\service\\availableSymbolsService.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":44,"column":5,"nodeType":"56","endLine":44,"endColumn":7,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":57,"column":5,"nodeType":"56","endLine":57,"endColumn":30,"suggestions":"59"},{"ruleId":"50","replacedBy":"60"},{"ruleId":"52","replacedBy":"61"},{"ruleId":"50","replacedBy":"62"},{"ruleId":"52","replacedBy":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fromCurrency' and 'toCurrency'. Either include them or remove the dependency array.","ArrayExpression",["66"],"React Hook useEffect has a missing dependency: 'pairRates'. Either include it or remove the dependency array.",["67"],["64"],["65"],["64"],["65"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},{"desc":"70","fix":"71"},"Update the dependencies array to be: [fromCurrency, toCurrency]",{"range":"72","text":"73"},"Update the dependencies array to be: [fromCurrency, pairRates, toCurrency]",{"range":"74","text":"75"},[1629,1631],"[fromCurrency, toCurrency]",[2085,2110],"[fromCurrency, pairRates, toCurrency]"]